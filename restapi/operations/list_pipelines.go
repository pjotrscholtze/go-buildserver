// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListPipelinesHandlerFunc turns a function with the right signature into a list pipelines handler
type ListPipelinesHandlerFunc func(ListPipelinesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListPipelinesHandlerFunc) Handle(params ListPipelinesParams) middleware.Responder {
	return fn(params)
}

// ListPipelinesHandler interface for that can handle valid list pipelines params
type ListPipelinesHandler interface {
	Handle(ListPipelinesParams) middleware.Responder
}

// NewListPipelines creates a new http.Handler for the list pipelines operation
func NewListPipelines(ctx *middleware.Context, handler ListPipelinesHandler) *ListPipelines {
	return &ListPipelines{Context: ctx, Handler: handler}
}

/* ListPipelines swagger:route GET /pipelines listPipelines

Get pipelines

*/
type ListPipelines struct {
	Context *middleware.Context
	Handler ListPipelinesHandler
}

func (o *ListPipelines) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListPipelinesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
