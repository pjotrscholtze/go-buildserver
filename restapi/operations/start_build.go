// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// StartBuildHandlerFunc turns a function with the right signature into a start build handler
type StartBuildHandlerFunc func(StartBuildParams) middleware.Responder

// Handle executing the request and returning a response
func (fn StartBuildHandlerFunc) Handle(params StartBuildParams) middleware.Responder {
	return fn(params)
}

// StartBuildHandler interface for that can handle valid start build params
type StartBuildHandler interface {
	Handle(StartBuildParams) middleware.Responder
}

// NewStartBuild creates a new http.Handler for the start build operation
func NewStartBuild(ctx *middleware.Context, handler StartBuildHandler) *StartBuild {
	return &StartBuild{Context: ctx, Handler: handler}
}

/* StartBuild swagger:route POST /repos/{name} startBuild

Start build

*/
type StartBuild struct {
	Context *middleware.Context
	Handler StartBuildHandler
}

func (o *StartBuild) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewStartBuildParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
