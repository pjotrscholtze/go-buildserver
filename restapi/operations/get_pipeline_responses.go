// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pjotrscholtze/go-buildserver/models"
)

// GetPipelineOKCode is the HTTP code returned for type GetPipelineOK
const GetPipelineOKCode int = 200

/*GetPipelineOK Pipeline infomation

swagger:response getPipelineOK
*/
type GetPipelineOK struct {

	/*
	  In: Body
	*/
	Payload *models.PipelineWithBuilds `json:"body,omitempty"`
}

// NewGetPipelineOK creates GetPipelineOK with default headers values
func NewGetPipelineOK() *GetPipelineOK {

	return &GetPipelineOK{}
}

// WithPayload adds the payload to the get pipeline o k response
func (o *GetPipelineOK) WithPayload(payload *models.PipelineWithBuilds) *GetPipelineOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pipeline o k response
func (o *GetPipelineOK) SetPayload(payload *models.PipelineWithBuilds) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPipelineOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPipelineNotFoundCode is the HTTP code returned for type GetPipelineNotFound
const GetPipelineNotFoundCode int = 404

/*GetPipelineNotFound Pipeline not found

swagger:response getPipelineNotFound
*/
type GetPipelineNotFound struct {
}

// NewGetPipelineNotFound creates GetPipelineNotFound with default headers values
func NewGetPipelineNotFound() *GetPipelineNotFound {

	return &GetPipelineNotFound{}
}

// WriteResponse to the client
func (o *GetPipelineNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
